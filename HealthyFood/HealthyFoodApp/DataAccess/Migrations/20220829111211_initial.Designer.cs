// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220829111211_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.HealthyFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("HealthyFood", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/recipe-image-legacy-id-1244455_7-e831545.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = " salmon steaks,  mushroom , pine nut",
                            Name = "penne",
                            Price = 300m
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/10/Tuna-Caper-Chilli-Spaghetti-0d409ad.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "red chilli, ,tuna , spinach ",
                            Name = "Tuna spaghetti",
                            Price = 500m
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/vegan-burger-f4eb0ad.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "chickpeas , pitta bread , Tomato ",
                            Name = "Vegan burger",
                            Price = 460m
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/omelette-pancakes-with-tomato-pepper-sauce-557a351.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "Garlic , Egg , Tomato ",
                            Name = "Omelette pancakes",
                            Price = 350m
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/spicychickenavocadowraps_5865-4035909.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "chicken breast , Tomato , Avocado ",
                            Name = "avocado wraps",
                            Price = 200m
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/chicken-broccoli-beetroot-salad-with-avocado-pesto-5f17f37.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "Broccoli , nigella seeds , Tomato ",
                            Name = " broccoli salad",
                            Price = 480m
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2022/03/Healthy-pepper-ham-omelette-f80d4d4.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "onion , Egg , Tomato ",
                            Name = "ham omelette",
                            Price = 600m
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/burrito-bowl-3629880.jpg?resize=960,872?quality=90&webp=true&resize=300,272",
                            Ingredients = "Avocado , Egg , honey ",
                            Name = "Burrito bowl",
                            Price = 400m
                        });
                });

            modelBuilder.Entity("Domain.HealthyFoodOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HealthyFoodId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HealthyFoodId");

                    b.HasIndex("OrderId");

                    b.ToTable("HealthyFoodOrderItem", (string)null);
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClosesAt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpensAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Location", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "record",
                            ClosesAt = 22,
                            Name = "Fresh Kitchen",
                            OpensAt = 8
                        },
                        new
                        {
                            Id = 2,
                            Address = "Gligor Prlicev",
                            ClosesAt = 22,
                            Name = "Fresh Kitchen",
                            OpensAt = 8
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kiril Pejcinovski",
                            ClosesAt = 22,
                            Name = "Fresh Kitchen",
                            OpensAt = 8
                        },
                        new
                        {
                            Id = 4,
                            Address = "Ilindenska",
                            ClosesAt = 22,
                            Name = "Fresh Kitchen",
                            OpensAt = 8
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Domain.HealthyFoodOrderItem", b =>
                {
                    b.HasOne("Domain.HealthyFood", "HealthyFood")
                        .WithMany()
                        .HasForeignKey("HealthyFoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Order", "Order")
                        .WithMany("Healthyfood")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthyFood");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Navigation("Healthyfood");
                });
#pragma warning restore 612, 618
        }
    }
}
